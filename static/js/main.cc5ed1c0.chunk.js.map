{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","videos","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Images","img","productionCompaniesImage","SubTitle","ProductionCountriesName","Videos","iframe","Companies","Countries","Production","ProductionButton","button","production","DetailPresenter","result","tabChange","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","onClick","production_companies","production_companie","logo_path","src","production_countries","production_countrie","overview","seasons","season","slice","video","width","height","allow","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc5ed1c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"8e2e61af77ded77f24e1bc6fa37bf62d\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  videos: id => api.get(`movie/${id}/videos`)\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  videos: id => api.get(`tv/${id}/videos`)\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\nconst Link = styled.a``;\n\nconst Images = styled.img`\n  height: 100px;\n  background-image: url(${props => props.productionCompaniesImage});\n  border: 1px solid #ffffff75;\n  padding: 10px;\n  background-color: #ffffff75;\n  margin: 10px 10px 10px 0;\n`;\nconst SubTitle = styled.div`\n  font-size: 16px;\n  color: #000;\n  font-weight: bold;\n  margin: 10px 0;\n  text-shadow: -0.5px 0 #fff, 0 1px #fff, 1px 0 #fff, 0 -1px #fff;\n`;\nconst ProductionCountriesName = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  margin-top: 10px;\n`;\nconst Videos = styled.iframe`\n  margin: 10px 0;\n`;\nconst Companies = styled.div`\n  margin: 10px 0;\n`;\nconst Countries = styled.div`\n  margin: 10px 0;\n`;\nconst Production = styled.div`\n  margin: 10px 0;\n`;\nconst ProductionButton = styled.button`\n  :first-child {\n    background-color: ${props =>\n      props.production === \"companies\" ? \"red\" : \"#fff\"};\n    border-radius: 5px;\n  }\n  :last-child {\n    background-color: ${props =>\n      props.production !== \"companies\" ? \"red\" : \"#fff\"};\n    border-radius: 5px;\n  }\n  cursor: pointer;\n  margin: 10px 5px 10px 0;\n`;\nconst DetailPresenter = ({\n  result,\n  loading,\n  error,\n  isMovie,\n  videos,\n  production,\n  tabChange\n}) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.imdb_id && <Divider>•</Divider>}\n            {result.imdb_id && (\n              <Link\n                target=\"_blank\"\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\n              >\n                <span role=\"img\" aria-label=\"play\">\n                  🎬IMDB\n                </span>\n              </Link>\n            )}\n          </ItemContainer>\n          <ItemContainer>\n            <Production>\n              <ProductionButton\n                production={production}\n                onClick={() => tabChange(\"companies\")}\n              >\n                Production Companies\n              </ProductionButton>\n              <ProductionButton\n                production={production}\n                onClick={() => tabChange(\"countries\")}\n              >\n                Production Countries\n              </ProductionButton>\n            </Production>\n            <Companies>\n              {production === \"companies\"\n                ? result.production_companies.map(\n                    (production_companie, index) =>\n                      production_companie.logo_path ? (\n                        <Images\n                          key={production_companie.id}\n                          src={`https://image.tmdb.org/t/p/original/${production_companie.logo_path}`}\n                        />\n                      ) : (\n                        \"\"\n                      )\n                  )\n                : \"\"}\n            </Companies>\n            <Countries>\n              {production === \"countries\"\n                ? result.production_countries\n                  ? result.production_countries.map(\n                      (production_countrie, index) =>\n                        production_countrie ? (\n                          <ProductionCountriesName key={index}>\n                            {production_countrie.name}\n                          </ProductionCountriesName>\n                        ) : (\n                          \"\"\n                        )\n                    )\n                  : \"\"\n                : \"\"}\n            </Countries>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <ItemContainer>\n            {!isMovie ? <SubTitle>Seasons</SubTitle> : \"\"}\n            {!isMovie\n              ? result.seasons.map((season, index) =>\n                  season.poster_path ? (\n                    <Images\n                      key={index}\n                      src={`https://image.tmdb.org/t/p/original/${season.poster_path}`}\n                    />\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"\"}\n          </ItemContainer>\n          <ItemContainer>\n            <SubTitle>YouTube</SubTitle>\n            {videos &&\n              videos\n                .slice(0, 2)\n                .map((video, index) => (\n                  <Videos\n                    width=\"560\"\n                    height=\"315\"\n                    key={index}\n                    src={`https://www.youtube.com/embed/${video.key}`}\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    title=\"a\"\n                  ></Videos>\n                ))}\n          </ItemContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  isMovie: PropTypes.bool.isRequired,\n  videos: PropTypes.array,\n  production: PropTypes.string.isRequired,\n  tabChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      videos: null,\n      production: \"companies\",\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    let videos = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n        ({\n          data: { results: videos }\n        } = await moviesApi.videos(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n        ({\n          data: { results: videos }\n        } = await tvApi.videos(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result, videos });\n    }\n  }\n\n  tabChange = production => {\n    this.setState({ production: production });\n  };\n\n  render() {\n    const { result, error, loading, isMovie, videos, production } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        isMovie={isMovie}\n        videos={videos}\n        production={production}\n        tabChange={this.tabChange}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}